#######################
#### Start of File ####
#######################
# --------------------------------------------------------------- 
# Makefile Contents: NWPS version for Datareel library builds
# C/C++ Compiler Used: gcc version 3.4.4 and higher
# Produced By: DataReel Software Development Team
# File Creation Date: 05/25/2001
# Date Last Modified: 07/24/2014
# --------------------------------------------------------------- 
# Define file extensions and path variables
OBJ_EXT = .o
EXE_EXT = 
LIB_EXT = .a
DLIB_EXT = .so
SHAREDLIB_VERSION = 4.3
SHAREDLIB_EXT = $(DLIB_EXT).$(SHAREDLIB_VERSION)
PATHSEP = /

# Define 32 bit/64-bit macros
ifeq ($(32BITCFG),1)
	64BIT_DEFMACS = -m32
else
	64BIT_DEFMACS = -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -m64
endif

ifeq ($(FINAL),0)
	DEBUG_DEFMACS = -D__DEBUG__
else
	DEBUG_DEFMACS = -D__NO_DEBUG_OPTIONS__	
endif

# Installation directory for the library files
LIB_INSTALL_DIR = $(NWPSdir)/lib

# Setup include paths
ADD_INC_PATHS = -I$(GCODE_LIB_DIR)$(PATHSEP)include

ANSI_DEFMACS = -D__USE_ANSI_CPP__
BTREE_DEFMACS = -D__USE_BINARY_SEARCH__ -D__USE_SINGLE_COMPARE__
COMPILER_DEFMACS =
CPP_DEFMACS = -D__USE_CPP_IOSTREAM__
DATABASE_DEFMACS = -D__USE_DATABASE_CACHE__ -D__USE_BTREE_CACHE__
DEVCACHE_DEFMACS = -D__VMEMORY_BUFFER__
DISPLAY_DEFMACS = -D__CONSOLE__
FILESYS_DEFMACS =
PS_DEFMACS = -D__USE_POSTSCRIPT_PRINTING__
HTM_DEFMACS = -D__USE_HTM_PRINTING__
TXT_DEFMACS = -D__USE_TEXT_PRINTING__
IO_DEFMACS = -D__USE_SIGNAL_IO__
THREAD_DEFMACS = -D__REENTRANT__
POSIX_DEFMACS= -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS
UNICODE_DEMACS = -D__HAS_UNICODE__

# Setup define macros
DEFMACS = -D__UNIX__ -D__POSIX__ -D__LINUX__ -D__X86__ \
$(64BIT_DEFMACS) $(ANSI_DEFMACS) $(BTREE_DEFMACS)  $(CPP_DEFMACS) $(DEBUG_DEFMACS) \
$(DISPLAY_DEFMACS) $(FILESYS_DEFMACS) $(UNICODE_DEMACS) $(POSIX_DEFMACS) \
$(DATABASE_DEFMACS) $(DEVCACHE_DEFMACS) $(PS_DEFMACS) $(HTM_DEFMACS) $(TXT_DEFMACS) \
$(COMPILER_DEFMACS) $(THREAD_DEFMACS)

# Define macros for compiler and linker
LINKER = ld
LIBUTIL = ar
RANLIB_UTIL = ranlib
SHARED_LIBUTIL = $(CC) -shared
LN_S = ln -s

# Define compiler and linker flags macros
# NOTE: Dynamic libraries require relocatable object files compiled 
# with the -fpic or -fPIC compiler option (Position Independent Code).
RELEASE_LIBCOMPILE_FLAGS = -Wall -fPIC $(ADD_INC_PATHS) $(DEFMACS) $(CFLAGS)
DEBUG_LIBCOMPILE_FLAGS = -Wall -fPIC -g -O0 -v -da -Q $(ADD_INC_PATHS) $(DEFMACS)
DEBUG_FLAGS = -Wall -g -O0 -v -da -Q $(ADD_INC_PATHS) $(DEFMACS)
RELEASE_FLAGS = -Wall $(ADD_INC_PATHS) $(DEFMACS) $(CFLAGS)

ifeq ($(FINAL),0)
	LIBCOMPILE_FLAGS = $(DEBUG_LIBCOMPILE_FLAGS)     
	COMPILE_FLAGS = $(DEBUG_FLAGS)
else
	LIBCOMPILE_FLAGS = $(RELEASE_LIBCOMPILE_FLAGS)
	COMPILE_FLAGS = $(RELEASE_FLAGS)
endif

COMPILE_ONLY = -c
OUTPUT = -o
LINKER_FLAGS = -lpthread -lcurses $(LFLAGS) #-ltermcap -lm
LIBUTIL_FLAGS = ruv
SHAREDLIBUTIL_FLAGS =

# --------------------------------------------------------------- 
#####################
#### End of File ####
#####################
