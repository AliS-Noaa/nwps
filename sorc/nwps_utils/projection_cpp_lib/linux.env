#######################
#### Start of File ####
#######################
# --------------------------------------------------------------- 
# Makefile Contents: Common settings for Linux makefiles
# C/C++ Compiler Used: gcc version 4.4 or higher
# --------------------------------------------------------------- 
# Define file extensions and path variables
OBJ_EXT = .o
EXE_EXT = 
LIB_EXT = .a
DLIB_EXT = .so
PATHSEP = /

# Setup include paths
ADD_INC_PATHS = -I${PROJCPPLIB}$(PATHSEP)include

# Define 64-bit macros
ifeq ($(64BITCFG),1)
	64BIT_DEFMACS = -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -m64
else
	64BIT_DEFMACS = 
endif

ifeq ($(FINAL),1)
	DEBUG_DEFMACS = -D__NO_DEBUG_OPTIONS__
else
	DEBUG_DEFMACS = -D__DEBUG__
endif

ANSI_DEFMACS = -D__USE_ANSI_CPP__
BTREE_DEFMACS = -D__USE_BINARY_SEARCH__ -D__USE_SINGLE_COMPARE__
COMPILER_DEFMACS =
CPP_DEFMACS = -D__USE_CPP_IOSTREAM__
DATABASE_DEFMACS = -D__USE_DATABASE_CACHE__ -D__USE_BTREE_CACHE__
DEVCACHE_DEFMACS = -D__VMEMORY_BUFFER__
DISPLAY_DEFMACS = -D__CONSOLE__
FILESYS_DEFMACS =
PS_DEFMACS = -D__USE_POSTSCRIPT_PRINTING__
HTM_DEFMACS = -D__USE_HTM_PRINTING__
TXT_DEFMACS = -D__USE_TEXT_PRINTING__
IO_DEFMACS = -D__USE_SIGNAL_IO__
THREAD_DEFMACS = -D__REENTRANT__
POSIX_DEFMACS= -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS
UNICODE_DEMACS = -D__HAS_UNICODE__

# Setup define macros
DEFMACS = -D__UNIX__ -D__POSIX__ -D__LINUX__ -D__X86__ \
$(64BIT_DEFMACS) $(ANSI_DEFMACS) $(BTREE_DEFMACS)  $(CPP_DEFMACS) $(DEBUG_DEFMACS) \
$(DISPLAY_DEFMACS) $(FILESYS_DEFMACS) $(UNICODE_DEMACS) $(POSIX_DEFMACS) \
$(DATABASE_DEFMACS) $(DEVCACHE_DEFMACS) $(PS_DEFMACS) $(HTM_DEFMACS) $(TXT_DEFMACS) \
$(COMPILER_DEFMACS) $(THREAD_DEFMACS)

# Define macros for compiler and linker
LINKER = ld
LIBUTIL = ar
RANLIB_UTIL = ranlib
SHARED_LIBUTIL = $(CC) -shared
LN_S = ln -s
LIBUTIL_FLAGS = ruv
SHAREDLIBUTIL_FLAGS =

# Define in application makefile
ADD_INC_PATHS = -I$(PROJCPPLIB)$(PATHSEP) -I$(APP_PATH)

# Define compiler and linker flags macros
# NOTE: For extended debugging add: -g -O0 -v -da -Q 
DEBUG_FLAGS = -Wall -g $(ADD_INC_PATHS) $(DEFMACS)

RELEASE_FLAGS = -Wall $(ADD_INC_PATHS) $(DEFMACS)

ifeq ($(FINAL),1)
	COMPILE_FLAGS = $(RELEASE_FLAGS) -I$(GCODE_LIB_DIR)$(PATHSEP)include $(CFLAGS)
else
	COMPILE_FLAGS = $(DEBUG_FLAGS) -I$(GCODE_LIB_DIR)$(PATHSEP)include
endif

COMPILE_ONLY = -c
OUTPUT = -o

LINK_LIBRARIES = ${NWPSdir}/lib/libdatareel.a
LINKER_FLAGS = -lpthread
#LINKER_FLAGS = -static -lpthread

# Additional libraries
LIBRARIES = 

# --------------------------------------------------------------- 
#####################
#### End of File ####
#####################
