#!/bin/bash
# ----------------------------------------------------------- 
# UNIX Shell Script File
# Tested Operating System(s): RHEL 5,6
# Tested Run Level(s): 3, 5
# Shell Used: BASH shell
# Original Author(s): Roberto Padilla-Hernandez
# File Creation Date: 06/04/2015
# Date Last Modified:
#
# Version control: 1.00
#
# Support Team:
#
# Contributors: Floyd fayton
#
# ----------------------------------------------------------- 
# ------------- Program Description and Details ------------- 
# ----------------------------------------------------------- 
#
# Job Card to set the resources required for a NWPS run
#
# ----------------------------------------------------------- 

date
export PS4='$SECONDS ${0/\/nw.*\/nwps.*\/} + '
set -xa

export DBNROOT=${UTILROOT}/fakedbn
# #############################################
# SETUP NWPS SHELL VARIABLES
# #############################################
export DATA=${DATA:-$DATAROOT/p${model}_${WFO}_${envir}}
mkdir -p $DATA
cd $DATA

curhour=$(date -u +%H)
if [ $curhour -lt 12 ]; then CYCLE="00"; fi
if [ $curhour -ge 12 ] && [ $curhour -lt 18 ]; then CYCLE="06"; fi
if [ $curhour -ge 18 ] && [ $curhour -lt 22 ]; then CYCLE="12"; fi
if [ $curhour -ge 22 ]; then CYCLE="18"; fi
echo ""
echo "INFO - Current hour is ${curhour}, setting model cycle to ${CYCLE}"
export cyc=${CYCLE}
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=${model}
export OFS=ofs
export RUN=$(echo ${job}|awk -F"_" '{print $2}')

####################################
# SENDECF  - Flag Events on ECFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
####################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-YES}
export SENDDBN_NTC=YES
####################################
# Specify Execution Areas
####################################
export HOMEnwps=${NWROOT}/${NET}.${nwps_ver}
export FIXnwps=${FIXnwps:-${HOMEnwps}/fix}
export EXECnwps=${EXECnwps:-${HOMEnwps}/exec}
export SORCnwps=${SORCnwps:-${HOMEnwps}/sorc}
export PARMnwps=${PARMnwps:-${HOMEnwps}/parm}
export USHnwps=${USHnwps:-${HOMEnwps}/ush}
export PMnwps=${PMnwps:-${USHnwps}/pm}
export BATHYdb=${BATHYdb:-${FIXnwps}/bathy_db}
export SHAPEFILEdb=${SHAPEFILEdb:-${FIXnwps}/shapefile_db}

# Set processing DIRs here
export ARCHdir=${ARCHdir:-${DATA}/archive}
export DATAdir=${DATAdir:-${DATA}/data}
export INPUTdir=${INPUTdir:-${DATA}/input}
export VARdir=${VARdir:-${DATA}/var}
export OUTPUTdir=${OUTPUTdir:-${DATA}/output}
export RUNdir=${RUNdir:-${DATA}/run}
export TMPdir=${TMPdir:-${DATA}/tmp}
export LOGdir=${LOGdir:-${DATA}/logs}
export GEN_NETCDF=${GEN_NETCDF:-FALSE}
export GEN_HDF5=${GEN_HDF5:-FALSE}
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
export PYTHONPATH=${HOMEnwps}/lib/python/python_modules/lib64/python2.6/site-packages:${HOMEnwps}/lib/basemap:${PYTHONPATH}
export PYTHON=python
export GRIB2dir=${GRIB2dir:-${DATA}/output/grib2}
export PARMwmo="${PARMnwps}/wmo_headers"
# Set NWPS run conditions
export DEBUGGING=${DEBUGGING:-TRUE}
export DEBUG_LEVEL=${DEBUG_LEVEL:-1}
export ISPRODUCTION=${ISPRODUCTION:-TRUE}
export SITETYPE=${SITETYPE:-EMC}
export MODELTYPE="SWAN"

export utilexec=${NWROOT}/util/exec
export pgmout=OUTPUT.$$
#setpdy.sh
. ./PDY

##############################################
# Define COM directory
##############################################
export COMIN=${COMROOT}/${NET}/${envir}/${WFO}.${PDY}
export COMINm1=${COMROOT}/${NET}/${envir}/${WFO}.${PDYm1}
export COMINm2=${COMROOT}/${NET}/${envir}/${WFO}.${PDYm2}
export COMINm3=${COMROOT}/${NET}/${envir}/${WFO}.${PDYm3}
export COMOUT=${COMROOT}/${NET}/${envir}/${WFO}.${PDY}
export GESOUT=${GESROOT}/${envir}/${NET}.${PDY}
export COMINgfs=${COMROOT}/gfs/prod/gfs.${PDY}
export COMINwave=${COMROOT}/wave/prod
export COMINestofs=${COMROOT}/estofs/prod/estofs.${PDY}
export COMINrtofs=${COMROOT}/rtofs/prod/rtofs.${PDY}
export dcom_hist="$GESOUT/dcom_hist.txt"
export dcom=${dcom:-/dcom/us007003}
export FORECASTWINDdir="${dcom}/${PDY}/wgrbbul/${NET}"
export PCOM=/pcom/${NET}

if [[ "$envir" != "prod" ]];then 
    export PCOM=/pcom/${envir}/nwps
else
    export PCOM=/pcom/nwps
fi

# make sure NWPS COM directory exists
if [ "${SENDCOM}" = YES ]; then
    mkdir -p $COMOUT
fi

mkdir -p $COMIN $LOGdir $RUNdir $TMPdir $OUTPUTdir $ARCHdir $DATAdir $INPUTdir $VARdir $GESOUT $PCOM

##############################################
# Execute the script
${HOMEnwps}/scripts/exnwps_prdgen.sh.ecf
export err=$?; err_chk
##############################################
if [ "$?" -eq 0 ] && [ "${N,,}" == "n" ]; then
    dfile=$(ecflow_client --group="get ${ECF_NAME%/*}/jnwps_prep ; show state"|grep label|awk '{print $NF}'|sed 's/\"//g')
    echo "FINISHED ${FORECASTWINDdir}/$dfile AT $(date -u "+%Y%m%d%H%M")" >> ${dcom_hist}
fi

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg $jlogfile "$msg"

if [ -e $pgmout ]; then
    cat $pgmout
fi

cd $DATAROOT

if [ "$KEEPDATA" != YES ]; then
    rm -rf $DATA
fi

date
